// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Database;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend.Entities.AgeGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgeGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Noworodek"
                        },
                        new
                        {
                            Id = 2,
                            Name = "2 miesiąc życia"
                        },
                        new
                        {
                            Id = 3,
                            Name = "3-4 miesiąc życia"
                        },
                        new
                        {
                            Id = 4,
                            Name = "5-6 miesiąc życia"
                        },
                        new
                        {
                            Id = 5,
                            Name = "7 miesiąc życia"
                        },
                        new
                        {
                            Id = 6,
                            Name = "13-14 miesiąc życia"
                        },
                        new
                        {
                            Id = 7,
                            Name = "16-18 miesiąc życia"
                        },
                        new
                        {
                            Id = 8,
                            Name = "6 rok życia"
                        },
                        new
                        {
                            Id = 9,
                            Name = "10 rok życia"
                        },
                        new
                        {
                            Id = 10,
                            Name = "14 rok życia"
                        },
                        new
                        {
                            Id = 11,
                            Name = "19 rok życia"
                        });
                });

            modelBuilder.Entity("backend.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("backend.Entities.TypesVaccines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypesVaccines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gruźlica BCG"
                        },
                        new
                        {
                            Id = 2,
                            Name = "wzw B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "DTP"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hib"
                        },
                        new
                        {
                            Id = 5,
                            Name = "polio IPV"
                        },
                        new
                        {
                            Id = 6,
                            Name = "odra, świnka, różyczka"
                        },
                        new
                        {
                            Id = 7,
                            Name = "DTaP"
                        },
                        new
                        {
                            Id = 8,
                            Name = "polio OPV"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Td"
                        });
                });

            modelBuilder.Entity("backend.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("backend.Entities.VaccinationSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgeGroupsId")
                        .HasColumnType("int");

                    b.Property<string>("Dose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAgeGroups")
                        .HasColumnType("int");

                    b.Property<int>("IdTypesVaccines")
                        .HasColumnType("int");

                    b.Property<int?>("TypesVaccinesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgeGroupsId");

                    b.HasIndex("IdAgeGroups");

                    b.HasIndex("IdTypesVaccines");

                    b.HasIndex("TypesVaccinesId");

                    b.ToTable("VaccinationSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dose = "",
                            IdAgeGroups = 1,
                            IdTypesVaccines = 1
                        },
                        new
                        {
                            Id = 2,
                            Dose = "1",
                            IdAgeGroups = 1,
                            IdTypesVaccines = 2
                        },
                        new
                        {
                            Id = 3,
                            Dose = "2",
                            IdAgeGroups = 2,
                            IdTypesVaccines = 2
                        },
                        new
                        {
                            Id = 4,
                            Dose = "1",
                            IdAgeGroups = 2,
                            IdTypesVaccines = 3
                        },
                        new
                        {
                            Id = 5,
                            Dose = "1",
                            IdAgeGroups = 2,
                            IdTypesVaccines = 4
                        },
                        new
                        {
                            Id = 6,
                            Dose = "2",
                            IdAgeGroups = 3,
                            IdTypesVaccines = 3
                        },
                        new
                        {
                            Id = 7,
                            Dose = "2",
                            IdAgeGroups = 3,
                            IdTypesVaccines = 4
                        },
                        new
                        {
                            Id = 8,
                            Dose = "1",
                            IdAgeGroups = 3,
                            IdTypesVaccines = 5
                        },
                        new
                        {
                            Id = 9,
                            Dose = "3",
                            IdAgeGroups = 4,
                            IdTypesVaccines = 3
                        },
                        new
                        {
                            Id = 10,
                            Dose = "3",
                            IdAgeGroups = 4,
                            IdTypesVaccines = 4
                        },
                        new
                        {
                            Id = 11,
                            Dose = "2",
                            IdAgeGroups = 4,
                            IdTypesVaccines = 5
                        },
                        new
                        {
                            Id = 12,
                            Dose = "3",
                            IdAgeGroups = 5,
                            IdTypesVaccines = 2
                        },
                        new
                        {
                            Id = 13,
                            Dose = "1",
                            IdAgeGroups = 6,
                            IdTypesVaccines = 6
                        },
                        new
                        {
                            Id = 14,
                            Dose = "4",
                            IdAgeGroups = 7,
                            IdTypesVaccines = 3
                        },
                        new
                        {
                            Id = 15,
                            Dose = "3",
                            IdAgeGroups = 7,
                            IdTypesVaccines = 5
                        },
                        new
                        {
                            Id = 16,
                            Dose = "4",
                            IdAgeGroups = 7,
                            IdTypesVaccines = 4
                        },
                        new
                        {
                            Id = 17,
                            Dose = "1 dawka przypominająca",
                            IdAgeGroups = 8,
                            IdTypesVaccines = 7
                        },
                        new
                        {
                            Id = 18,
                            Dose = "",
                            IdAgeGroups = 8,
                            IdTypesVaccines = 8
                        },
                        new
                        {
                            Id = 19,
                            Dose = "2 dawka przypominająca",
                            IdAgeGroups = 9,
                            IdTypesVaccines = 6
                        },
                        new
                        {
                            Id = 20,
                            Dose = "2 dawka przypominająca",
                            IdAgeGroups = 10,
                            IdTypesVaccines = 9
                        },
                        new
                        {
                            Id = 21,
                            Dose = "3 dawka przypominająca",
                            IdAgeGroups = 11,
                            IdTypesVaccines = 9
                        });
                });

            modelBuilder.Entity("backend.Entities.Vaccinations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfProduction")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vaccinations");
                });

            modelBuilder.Entity("backend.Entities.VaccinationSchedule", b =>
                {
                    b.HasOne("backend.Entities.AgeGroups", null)
                        .WithMany("VaccinationSchedules")
                        .HasForeignKey("AgeGroupsId");

                    b.HasOne("backend.Entities.AgeGroups", "AgeGroups")
                        .WithMany()
                        .HasForeignKey("IdAgeGroups")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Entities.TypesVaccines", "TypesVaccines")
                        .WithMany()
                        .HasForeignKey("IdTypesVaccines")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Entities.TypesVaccines", null)
                        .WithMany("VaccinationSchedules")
                        .HasForeignKey("TypesVaccinesId");

                    b.Navigation("AgeGroups");

                    b.Navigation("TypesVaccines");
                });

            modelBuilder.Entity("backend.Entities.AgeGroups", b =>
                {
                    b.Navigation("VaccinationSchedules");
                });

            modelBuilder.Entity("backend.Entities.TypesVaccines", b =>
                {
                    b.Navigation("VaccinationSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
